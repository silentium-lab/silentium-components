!function(e,r){"use strict";e.deadline=(e,t,u)=>{let s=null;return a=>{r.value(u,r.guestCast(a,(u=>{s&&clearTimeout(s);let l=!1;s=setTimeout((()=>{l||(l=!0,r.give(new Error("Timeout reached in Deadline class"),e))}),u),r.value(r.sourceFiltered(t,(()=>!l)),a),r.value(t,r.patronOnce((()=>{l=!0})))})))}},e.dirty=(e,t=!1,u=[],s=[])=>{const a=r.sourceOf(),l=r.sourceAll([a,e]),n={give:e=>(r.give(JSON.parse(JSON.stringify(e)),a),n),value:e=>(r.value(l,r.guestCast(e,(([t,a])=>{t&&r.give(Object.fromEntries(Object.entries(t).filter((([e,r])=>!!u.includes(e)||!s.includes(e)&&r!==a[e]))),e)}))),n)};return t&&r.value(e,r.patronOnce(n)),n},e.groupActiveClass=(e,t,u)=>(r.value(r.sourceAll([e,t,u]),r.patron((([e,r,t])=>{t.forEach((r=>{r.classList&&r.classList.remove(e)})),r.classList.add(e)}))),u),e.hashTable=e=>{const t=r.sourceOf({});return r.subSource(t,e),r.value(e,r.patron((([e,r])=>{t.value((t=>{t[e]=r}))}))),t.value},e.loading=(e,t)=>{const u=r.sourceOf();return r.subSourceMany(u,[e,t]),r.value(e,r.patron((()=>{u.give(!0)}))),r.value(t,r.patron((()=>{u.give(!1)}))),u.value},e.path=(e,t)=>{const u=r.sourceOf();return r.subSourceMany(u,[e,t]),r.value(r.sourceAll([e,t]),r.patron((([e,t])=>{const s=t.split(".");let a=e;s.forEach((e=>{a=a[e]})),void 0!==a&&a!==e&&r.give(a,u)}))),u.value}}({},silentium);
