import{value as e,sourceAll as t,patron as n,sourceOf as r,patronOnce as l,guestCast as s,give as u,subSourceMany as c,sourceFiltered as o,subSource as a,sourceResettable as i,removePatronFromPools as v,guestDisposable as g,destroy as p,guestSync as m,sourceCombined as d,sourceAny as E,sourceChain as f}from"silentium";const O=(r,l,s)=>(e(t([r,l,s]),n((([e,t,n])=>{n.forEach((t=>{t.classList&&t.classList.remove(e)})),t.classList.add(e)}))),s),j=(n,c=!1,o=[],a=[])=>{const i=r(),v=t([i,n]),g={give:e=>(u(JSON.parse(JSON.stringify(e)),i),g),value:t=>(e(v,s(t,(([e,n])=>{e&&u(Object.fromEntries(Object.entries(e).filter((([e,t])=>!!o.includes(e)||!a.includes(e)&&t!==n[e]))),t)}))),g)};return c&&e(n,l(g)),g},x=(t,l)=>{const s=r();return c(s,[t,l]),e(t,n((()=>{s.give(!0)}))),e(l,n((()=>{s.give(!1)}))),s.value},b=(l,s)=>{const o=r();return c(o,[l,s]),e(t([l,s]),n((([e,t])=>{const n=t.split(".");let r=e;n.forEach((e=>{r=r[e]})),void 0!==r&&r!==e&&u(r,o)}))),o.value},h=(t,n,r)=>{let c=null;return a=>{e(r,s(a,(r=>{c&&clearTimeout(c);let s=!1;c=setTimeout((()=>{s||(s=!0,u(new Error("Timeout reached in Deadline class"),t))}),r),e(o(n,(()=>!s)),a),e(n,l((()=>{s=!0})))})))}},w=t=>{const l=r();a(l,t);let s=!1,c=null;return e(t,n((e=>{c=e,s||(s=!0,queueMicrotask((()=>{s=!1,null!==c&&(u(c,l),c=null)})))}))),l},L=(t,s,u,c)=>{const o=r(),a=r(),g=i(o,a);let p,m;return e(t,n((t=>{a.give(1),p&&v(p),m&&v(m),s(t)?(p=l(o),e(u,p)):c&&(m=l(o),e(c,m))}))),g},R=(t,l)=>{const s=i(r(),t);return e(l,n((()=>{e(t,s)}))),s.value},S=(t,s,u)=>{const c=r();return e(t,n((t=>{!0===t?e(s,l((e=>{c.give(e)}))):void 0!==u&&e(u,l((e=>{c.give(e)})))}))),c.value},T=t=>{const l=r();let s=null;return e(t,n((e=>{e!==s&&(l.give(e),s=e)}))),l.value},k=(t,s)=>{const u=r(),c=i(u,s);let o=!1;return a(u,t),e(t,n(g(u.give,(()=>o)))),e(s,l((()=>{o=!0,p([u])}))),c.value},y=(t,n)=>{const r=m(n);return e(t,r),e=>{u(r.value(),e)}},J=t=>{const l=r({});return a(l,t),e(t,n((([e,t])=>{l.value((n=>{n[e]=t}))}))),l.value},N=e=>{const t=Object.keys(e);return d(...Object.values(e))(((e,...n)=>{const r={};n.forEach(((e,n)=>{r[t[n]]=e})),u(r,e)}))},q=(e,t="")=>d(t,...e)(((e,t,...n)=>{u(n.join(t),e)})),B=(e,t,n="")=>d(e,t,n)(((e,t,n,r)=>{u(new RegExp(t,r).test(n),e)})),D=(t,l,s)=>{const u=r();return e(l,n((r=>{e(E([f(t,s),...r.map((e=>f(o(B(e.pattern,t,e.patternFlags),Boolean),e.template)))]),n(u))}))),u.value},F=(e,t,n,r="")=>d(t,e,n,r)(((e,t,n,r,l)=>{u(String(n).replace(new RegExp(t,l),r),e)})),M=(e,t,n="")=>d(e,t,n)(((e,t,n,r)=>{const l=new RegExp(t,r).exec(n);u(l??[],e)})),z=(r,l,s)=>(e(t([r,l,s]),n((([e,t,n])=>{e[t]=n}))),r),A=(e,t)=>d(e,t)(((e,t,n)=>{u(t&&n,e)})),C=(e,t)=>d(e,t)(((e,t,n)=>{u(t||n,e)})),G=t=>n=>{e(t,s(n,(e=>{u(!e,n)})))};export{A as and,S as branch,q as concatenated,h as deadline,R as deferred,j as dirty,L as fork,O as groupActiveClass,J as hashTable,x as loading,k as lock,T as memo,y as moment,G as not,C as or,b as path,N as record,M as regexpMatch,B as regexpMatched,F as regexpReplaced,D as router,z as set,w as tick};
//# sourceMappingURL=silentium-components.min.mjs.map
