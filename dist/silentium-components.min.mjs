import{primitive as e,shared as t,filtered as r,isFilled as l,late as n,applied as i,all as o,executorApplied as c,of as s}from"silentium";const a=(t,r,l)=>n=>{const i=e(r);let o;void 0!==l&&(o=e(l)),t((e=>{let t=null;e?t=i.primitive():o&&(t=o.primitive()),null!==t&&n(t)}))},u=(e,t)=>r=>{t((()=>{r(e)}))},v=(e,l,n)=>i=>{let o=null;const c=t(l,!0);n((t=>{o&&clearTimeout(o);let l=!1;o=setTimeout((()=>{l||(l=!0,e(new Error("Timeout reached in Deadline class")))}),t);r(c.value,(()=>!l))(i),c.value((()=>{l=!0}))}))},p=(t,r)=>n=>{const i=e(t);r((()=>{const e=i.primitive();l(e)&&n(e)}))},m=(e,t=[],r=[],l)=>{const c=n();return void 0===l&&(l=e=>JSON.parse(JSON.stringify(e))),{value:n=>{const s=i(c.value,l);o(s,e)((([e,l])=>{e&&n(Object.fromEntries(Object.entries(e).filter((([e,n])=>!!t.includes(e)||!r.includes(e)&&n!==l[e]))))}))},give:e=>{c.give(e)}}},g=(e,t)=>r=>{e((()=>r(!0))),t((()=>r(!1)))},d=(e,t)=>l=>{let n=!1;t((e=>{n=e}));r(e,(()=>!n))(l)},E=e=>t=>{let r=null;e((e=>{e!==r&&(t(e),r=e)}))},O=e=>t=>{let r=!1;e((e=>{!1===r?r=!0:t(e)}))},f=(t,r)=>{const n=e(t.value),i=e(r);return{value:e=>{o(t.value,r)((([t,r])=>{const l=r.split(".");let n=t;l.forEach((e=>{n=n[e]})),void 0!==n&&n!==t&&e(n)}))},give:e=>{const r=i.primitive();l(r)&&t.give({...n.primitive(),[r]:e})}}},S=(e,t)=>r=>{o(e,t)((([e,t])=>{const l=t.split(".");let n=e;l.forEach((e=>{n=n[e]})),void 0!==n&&n!==e&&r(n)}))},h=(e,t)=>r=>{t((()=>{e(r)}))},j=(t,r)=>n=>{const i=e(t);r((()=>{const e=i.primitive();l(e)&&n(e)}))},T=e=>t=>{let r=!1,l=null;e((e=>{l=e,r||(r=!0,queueMicrotask((()=>{r=!1,null!==l&&(t(l),l=null)})))}))},b=(e,t=0)=>r=>{let l=null;c(e,(e=>r=>{l&&clearTimeout(l),l=setTimeout((()=>{e(r)}),t)}))(r)},w=e=>t=>{const r={};e((([e,l])=>{r[e]=l,t(r)}))},J=e=>t=>{const r=Object.keys(e);o(...Object.values(e))((e=>{const l={};e.forEach(((e,t)=>{l[r[t]]=e})),t(l)}))},N=(e,t=s(""))=>r=>{o(t,...e)((([e,...t])=>{r(t.join(e))}))},x=(e=s(""),t=s({}))=>{let r=0;const l={$TPL:s("$TPL")};return{value:r=>{const n=J(l);i(o(e,t,n),(([e,t,r])=>(Object.entries(t).forEach((([t,r])=>{e=e.replaceAll(t,String(r))})),Object.entries(r).forEach((([t,r])=>{e=e.replaceAll(t,String(r))})),e)))(r)},template:t=>{e=s(t)},var:e=>{const t=`$var${r}`;return r+=1,l[t]=e,t}}},y=(e,t,r=s(""))=>l=>{o(e,t,r)((([e,t,r])=>{l(new RegExp(e,r).test(t))}))},$=(e,t,r,l=s(""))=>n=>{o(t,e,r,l)((([e,t,r,l])=>{n(String(t).replace(new RegExp(e,l),r))}))},F=(e,t,r=s(""))=>l=>{o(e,t,r)((([e,t,r])=>{const n=new RegExp(e,r).exec(t);l(n??[])}))},R=(e,t,r)=>l=>{o(e,t,r)((([e,t,r])=>{e[t]=r,l(e)}))},k=()=>s(!1),A=(e,t,r)=>l=>{o(t,e)((([e,t])=>{const n=o(r(),o(...e.map((e=>{return r=y(s(e.pattern),s(t),e.patternFlags?s(e.patternFlags):void 0),l=e.template,n=k,e=>{r((t=>{let r=null;t?r=l():n&&(r=n()),r&&r(e)}))};var r,l,n}))));i(n,(e=>{const t=e[1].find((e=>!1!==e));return t||e[0]}))(l)}))},L=(e,t)=>r=>{o(e,t)((([e,t])=>{r(e&&t)}))},P=(e,t)=>r=>{o(e,t)((([e,t])=>{r(e||t)}))},q=e=>t=>{e((e=>{t(!e)}))},B=e=>t=>{i(e,Boolean)(t)},D=(e,t)=>r=>{e((e=>{try{r(JSON.parse(e))}catch(e){t?.(new Error(`Failed to parse JSON: ${e}`))}}))},M=(e,t)=>r=>{e((e=>{try{r(JSON.stringify(e))}catch{t?.(new Error("Failed to convert to JSON"))}}))},z=e=>t=>{i(e,(e=>e[0]))(t)};export{L as and,B as bool,a as branch,N as concatenated,u as constant,v as deadline,p as deferred,m as dirty,z as first,D as fromJson,w as hashTable,g as loading,d as lock,E as memo,q as not,O as onlyChanged,P as or,f as part,S as path,h as polling,J as recordOf,F as regexpMatch,y as regexpMatched,$ as regexpReplaced,A as router,R as set,j as shot,b as task,x as template,T as tick,M as toJson};
//# sourceMappingURL=silentium-components.min.mjs.map
