import{primitive as e,shared as t,filtered as n,isFilled as r,late as i,applied as l,all as o,executorApplied as c,of as s,destructor as u}from"silentium";const a=(t,n,r)=>i=>{const l=e(n);let o;void 0!==r&&(o=e(r)),t((e=>{let t=null;e?t=l.primitive():o&&(t=o.primitive()),null!==t&&i(t)}))},p=(e,t)=>n=>{t((()=>{n(e)}))},v=(e,r,i)=>l=>{let o=null;const c=t(r,!0);i((t=>{o&&clearTimeout(o);let r=!1;o=setTimeout((()=>{r||(r=!0,e(new Error("Timeout reached in Deadline class")))}),t);n(c.event,(()=>!r))(l),c.event((()=>{r=!0}))}))},m=(t,n)=>i=>{const l=e(t);n((()=>{const e=l.primitive();r(e)&&i(e)}))},f=t=>{const n=e(t);let i=n.primitive();return function e(t){r(i)?t(i):(i=n.primitive(),e(t))}},d=(e,t=[],n=[],r)=>{const c=i();return void 0===r&&(r=e=>JSON.parse(JSON.stringify(e))),{event:i=>{const s=l(c.event,r);o(s,e)((([e,r])=>{e&&i(Object.fromEntries(Object.entries(e).filter((([e,i])=>!!t.includes(e)||!n.includes(e)&&i!==r[e]))))}))},use:e=>{c.use(e)}}},E=(e,t)=>n=>{e((()=>n(!0))),t((()=>n(!1)))},h=(e,t)=>r=>{let i=!1;t((e=>{i=e}));n(e,(()=>!i))(r)},O=e=>t=>{let n=null;e((e=>{e!==n&&(t(e),n=e)}))},g=e=>t=>{let n=!1;e((e=>{!1===n?n=!0:t(e)}))},S=(t,n)=>{const i=e(t.event),l=e(n);return{event:e=>{o(t.event,n)((([t,n])=>{const r=n.split(".");let i=t;r.forEach((e=>{i=i[e]})),void 0!==i&&i!==t&&e(i)}))},use:e=>{const n=l.primitive();r(n)&&t.use({...i.primitive(),[n]:e})}}},j=(e,t)=>n=>{o(e,t)((([e,t])=>{const r=t.split(".");let i=e;r.forEach((e=>{i=i[e]})),void 0!==i&&i!==e&&n(i)}))},y=(e,t)=>n=>{t((()=>{e(n)}))},T=(t,n)=>i=>{const l=e(t);n((()=>{const e=l.primitive();r(e)&&i(e)}))},b=(e,t=0)=>n=>{let r=null;c(e,(e=>n=>{r&&clearTimeout(r),r=setTimeout((()=>{e(n)}),t)}))(n)},w=e=>t=>{let n=!1,r=null;e((e=>{r=e,n||(n=!0,queueMicrotask((()=>{n=!1,null!==r&&(t(r),r=null)})))}))},J=e=>t=>{const n={};e((([e,r])=>{n[e]=r,t(n)}))},N=e=>t=>{const n=Object.keys(e);o(...Object.values(e))((e=>{const r={};e.forEach(((e,t)=>{r[n[t]]=e})),t(r)}))},x=(e,t=s(""))=>n=>{o(t,...e)((([e,...t])=>{n(t.join(e))}))},$=(e=s(""),t=s({}))=>{let n=0;const r={$TPL:s("$TPL")},i=[];return{value:n=>{const i=N(r);l(o(e,t,i),(([e,t,n])=>(Object.entries(t).forEach((([t,n])=>{e=e.replaceAll(t,String(n))})),Object.entries(n).forEach((([t,n])=>{e=e.replaceAll(t,String(n))})),e)))(n)},template:t=>{e=s(t)},var:e=>{const t=`$var${n}`;return n+=1,r[t]=u(e,(e=>{i.push(e)})).value,t},destroy(){i.forEach((e=>e()))}}},F=(e,t,n=s(""))=>r=>{o(e,t,n)((([e,t,n])=>{r(new RegExp(e,n).test(t))}))},R=(e,t,n,r=s(""))=>i=>{o(t,e,n,r)((([e,t,n,r])=>{i(String(t).replace(new RegExp(e,r),n))}))},k=(e,t,n=s(""))=>r=>{o(e,t,n)((([e,t,n])=>{const i=new RegExp(e,n).exec(t);r(i??[])}))},A=(e,t,n)=>r=>{o(e,t,n)((([e,t,n])=>{e[t]=n,r(e)}))},L=()=>s(!1),P=(e,t,n)=>r=>{const i=[],c=()=>{i.forEach((e=>e())),i.length=0};return o(t,e)((([e,t])=>{c();const a=o(n(),o(...e.map((e=>{return u((n=F(s(e.pattern),s(t),e.patternFlags?s(e.patternFlags):void 0),r=e.template,l=L,e=>{let t;return n((n=>{void 0!==t&&"function"==typeof t&&t();let i=null;n?i=r():l&&(i=l()),i&&(t=i(e))})),()=>{t?.()}}),(e=>i.push(e))).value;var n,r,l}))));l(a,(e=>{const t=e[1].find((e=>!1!==e));return t||e[0]}))(r)})),c},q=(e,t)=>n=>{o(e,t)((([e,t])=>{n(e&&t)}))},B=(e,t)=>n=>{o(e,t)((([e,t])=>{n(e||t)}))},D=e=>t=>{e((e=>{t(!e)}))},M=e=>t=>{l(e,Boolean)(t)},z=(e,t)=>n=>{e((e=>{try{n(JSON.parse(e))}catch(e){t?.(new Error(`Failed to parse JSON: ${e}`))}}))},C=(e,t)=>n=>{e((e=>{try{n(JSON.stringify(e))}catch{t?.(new Error("Failed to convert to JSON"))}}))},G=e=>t=>{l(e,(e=>e[0]))(t)};export{q as and,M as bool,a as branch,x as concatenated,p as constant,v as deadline,m as deferred,f as detached,d as dirty,G as first,z as fromJson,J as hashTable,E as loading,h as lock,O as memo,D as not,g as onlyChanged,B as or,S as part,j as path,y as polling,N as recordOf,k as regexpMatch,F as regexpMatched,R as regexpReplaced,P as router,A as set,T as shot,b as task,$ as template,w as tick,C as toJson};
//# sourceMappingURL=silentium-components.min.mjs.map
