import{value as e,sourceAll as t,patron as r,sourceOf as s,patronOnce as n,guestCast as c,give as i,subSourceMany as l,sourceFiltered as o,subSource as u,sourceCombined as a}from"silentium";const v=(s,n,c)=>(e(t([s,n,c]),r((([e,t,r])=>{r.forEach((t=>{t.classList&&t.classList.remove(e)})),t.classList.add(e)}))),c),m=(r,l=!1,o=[],u=[])=>{const a=s(),v=t([a,r]),m={give:e=>(i(JSON.parse(JSON.stringify(e)),a),m),value:t=>(e(v,c(t,(([e,r])=>{e&&i(Object.fromEntries(Object.entries(e).filter((([e,t])=>!!o.includes(e)||!u.includes(e)&&t!==r[e]))),t)}))),m)};return l&&e(r,n(m)),m},d=(t,n)=>{const c=s();return l(c,[t,n]),e(t,r((()=>{c.give(!0)}))),e(n,r((()=>{c.give(!1)}))),c.value},f=(n,c)=>{const o=s();return l(o,[n,c]),e(t([n,c]),r((([e,t])=>{const r=t.split(".");let s=e;r.forEach((e=>{s=s[e]})),void 0!==s&&s!==e&&i(s,o)}))),o.value},O=(t,r,s)=>{let l=null;return u=>{e(s,c(u,(s=>{l&&clearTimeout(l);let c=!1;l=setTimeout((()=>{c||(c=!0,i(new Error("Timeout reached in Deadline class"),t))}),s),e(o(r,(()=>!c)),u),e(r,n((()=>{c=!0})))})))}},E=t=>{const n=s({});return u(n,t),e(t,r((([e,t])=>{n.value((r=>{r[e]=t}))}))),n.value},b=e=>{const t=Object.keys(e);return a(...Object.values(e))(((e,...r)=>{const s={};r.forEach(((e,r)=>{s[t[r]]=e})),i(s,e)}))};export{O as deadline,m as dirty,v as groupActiveClass,E as hashTable,d as loading,f as path,b as record};
//# sourceMappingURL=silentium-components.min.mjs.map
