import{value as e,sourceAll as t,patron as r,sourceOf as n,patronOnce as s,guestCast as l,give as c,subSourceMany as o,sourceFiltered as u,subSource as a,sourceResettable as i,removePatronFromPools as v,sourceCombined as p,sourceAny as m,sourceChain as g}from"silentium";const d=(n,s,l)=>(e(t([n,s,l]),r((([e,t,r])=>{r.forEach((t=>{t.classList&&t.classList.remove(e)})),t.classList.add(e)}))),l),f=(r,o=!1,u=[],a=[])=>{const i=n(),v=t([i,r]),p={give:e=>(c(JSON.parse(JSON.stringify(e)),i),p),value:t=>(e(v,l(t,(([e,r])=>{e&&c(Object.fromEntries(Object.entries(e).filter((([e,t])=>!!u.includes(e)||!a.includes(e)&&t!==r[e]))),t)}))),p)};return o&&e(r,s(p)),p},E=(t,s)=>{const l=n();return o(l,[t,s]),e(t,r((()=>{l.give(!0)}))),e(s,r((()=>{l.give(!1)}))),l.value},O=(s,l)=>{const u=n();return o(u,[s,l]),e(t([s,l]),r((([e,t])=>{const r=t.split(".");let n=e;r.forEach((e=>{n=n[e]})),void 0!==n&&n!==e&&c(n,u)}))),u.value},j=(t,r,n)=>{let o=null;return a=>{e(n,l(a,(n=>{o&&clearTimeout(o);let l=!1;o=setTimeout((()=>{l||(l=!0,c(new Error("Timeout reached in Deadline class"),t))}),n),e(u(r,(()=>!l)),a),e(r,s((()=>{l=!0})))})))}},b=t=>{const s=n();a(s,t);let l=!1,o=null;return e(t,r((e=>{o=e,l||(l=!0,queueMicrotask((()=>{l=!1,null!==o&&(c(o,s),o=null)})))}))),s},h=(t,s,l,c)=>{const o=n(),u=n(),a=i(o,u);let p,m;return e(t,r((t=>{u.give(1),p&&v(p),m&&v(m),s(t)?(p=r(o),e(l,p)):c&&(m=r(o),e(c,m))}))),a},w=t=>{const s=n({});return a(s,t),e(t,r((([e,t])=>{s.value((r=>{r[e]=t}))}))),s.value},x=e=>{const t=Object.keys(e);return p(...Object.values(e))(((e,...r)=>{const n={};r.forEach(((e,r)=>{n[t[r]]=e})),c(n,e)}))},L=(e,t="")=>p(t,...e)(((e,t,...r)=>{c(r.join(t),e)})),S=(e,t,r="")=>p(e,t,r)(((e,t,r,n)=>{c(new RegExp(t,n).test(r),e)})),T=(t,s,l)=>{const c=n();return e(s,r((n=>{e(m([g(t,l),...n.map((e=>g(u(S(e.pattern,t,e.patternFlags),Boolean),e.template)))]),r(c))}))),c.value},k=(e,t,r,n="")=>p(t,e,r,n)(((e,t,r,n,s)=>{c(String(r).replace(new RegExp(t,s),n),e)}));export{L as concatenated,j as deadline,f as dirty,h as fork,d as groupActiveClass,w as hashTable,E as loading,O as path,x as record,S as regexpMatched,k as regexpReplaced,T as router,b as tick};
//# sourceMappingURL=silentium-components.min.mjs.map
