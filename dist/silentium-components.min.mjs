import{of as e,applied as t,all as r,sharedStateless as n,filtered as l,isFilled as o,i as s,any as a,chain as c}from"silentium";const u=(n,l=[],o=[])=>{const[s,a]=e(),c=t(s,(e=>JSON.parse(JSON.stringify(e))));return[e=>{r(c,n)((([t,r])=>{t&&e(Object.fromEntries(Object.entries(t).filter((([e,t])=>!!l.includes(e)||!o.includes(e)&&t!==r[e]))))}))},a]},i=(e,t)=>r=>{e((()=>{r(!0)})),t((()=>{r(!1)}))},p=(e,t)=>n=>{r(e,t)((([e,t])=>{const r=t.split(".");let l=e;r.forEach((e=>{l=l[e]})),void 0!==l&&l!==e&&n(l)}))},v=(e,t,r)=>{let o=null;return s=>{const[a,c]=n(t);return r((t=>{o&&clearTimeout(o);let r=!1;o=setTimeout((()=>{r||(r=!0,e(new Error("Timeout reached in Deadline class")))}),t);l(a,(()=>!r))(s),a((()=>{r=!0}))})),()=>{c.destroy()}}},d=e=>t=>{let r=!1,n=null;e((e=>{n=e,r||(r=!0,queueMicrotask((()=>{r=!1,null!==n&&(t(n),n=null)})))}))},m=e=>{let t;return e((e=>{t=e})),{value(){if(void 0===t)throw new Error("no value in sync");return t}}},f=(e,t)=>r=>{const n=m(e);t((()=>{o(n.value())&&r(n.value())}))},E=(e,t,r)=>n=>{const l=m(t);let o;void 0!==r&&(o=m(r)),e((e=>{e?n(l.value()):o&&n(o.value())}))},O=e=>{let t=null;return r=>{e((e=>{e!==t&&(r(e),t=e)}))}},g=(e,t)=>{let r=!1;const n=l(e,(()=>!r));return e=>{t((e=>{r=e})),n(e)}},w=(e,t)=>r=>{const n=m(e);t((()=>{o(n.value())&&r(n.value())}))},y=e=>{let t=!1;return r=>{e((e=>{!1===t?t=!0:r(e)}))}},S=e=>t=>{const r={};e((([e,n])=>{r[e]=n,t(r)}))},h=e=>t=>{const n=Object.keys(e);r(...Object.values(e))((e=>{const r={};e.forEach(((e,t)=>{r[n[t]]=e})),t(r)}))},J=(e,t=s(""))=>n=>{r(t,...e)((([e,...t])=>{n(t.join(e))}))},N=(e,t,n=s(""))=>l=>{r(e,t,n)((([e,t,r])=>{l(new RegExp(e,r).test(t))}))},j=(e,t,r)=>n=>{t((t=>{a(c(e,r),...t.map((t=>E(N(s(t.pattern),e,t.patternFlags?s(t.patternFlags):void 0),"function"==typeof t.template?t.template:s(t.template)))))(n)}))},x=(e,t,n,l=s(""))=>o=>{r(t,e,n,l)((([e,t,r,n])=>{o(String(t).replace(new RegExp(e,n),r))}))},b=(e,t,n=s(""))=>l=>{r(e,t,n)((([e,t,r])=>{const n=new RegExp(e,r).exec(t);l(n??[])}))},F=(e,t,n)=>l=>{r(e,t,n)((([e,t,r])=>{e[t]=r,l(e)}))},R=(e,t)=>n=>{r(e,t)((([e,t])=>{n(e&&t)}))},T=(e,t)=>n=>{r(e,t)((([e,t])=>{n(e||t)}))},k=e=>t=>{e((e=>{t(!e)}))},q=(e,t)=>r=>{e((e=>{try{r(JSON.parse(e))}catch(e){t?.(new Error(`Failed to parse JSON: ${e}`))}}))},D=(e,t)=>r=>{e((e=>{try{r(JSON.stringify(e))}catch{t?.(new Error("Failed to convert to JSON"))}}))};export{R as and,E as branch,J as concatenated,v as deadline,f as deferred,u as dirty,q as fromJson,S as hashTable,i as loading,g as lock,O as memo,k as not,y as onlyChanged,T as or,p as path,h as record,b as regexpMatch,N as regexpMatched,x as regexpReplaced,j as router,F as set,w as shot,d as tick,D as toJson};
//# sourceMappingURL=silentium-components.min.mjs.map
