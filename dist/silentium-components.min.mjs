import{Primitive as t,Shared as n,Filtered as e,isFilled as r,Late as u,Applied as o,All as i,ExecutorApplied as c,Of as l,Destructor as s}from"silentium";function f(n,e,r){return u=>{const o=t(e);let i;void 0!==r&&(i=t(r)),n((t=>{let n=null;t?n=o.primitive():i&&(n=i.primitive()),null!==n&&u(n)}))}}function a(t,n,e){return r=>{let u;return t((t=>{void 0!==u&&"function"==typeof u&&u();let o=null;t?o=n():e&&(o=e()),o&&(u=o(r))})),()=>{u?.()}}}function p(t,n){return e=>{n((()=>{e(t)}))}}function v(t,r,u){return o=>{let i=null;const c=n(r,!0);u((n=>{i&&clearTimeout(i);let r=!1;i=setTimeout((()=>{r||(r=!0,t(new Error("Timeout reached in Deadline class")))}),n);e(c.event,(()=>!r))(o),c.event((()=>{r=!0}))}))}}function m(n,e){return u=>{const o=t(n);e((()=>{const t=o.primitive();r(t)&&u(t)}))}}function d(n){return function(e){const u=t(n).primitive();r(u)&&e(u)}}function E(t,n=[],e=[],r){const c=u();return void 0===r&&(r=t=>JSON.parse(JSON.stringify(t))),{event:u=>{const l=o(c.event,r);i(l,t)((([t,r])=>{t&&u(Object.fromEntries(Object.entries(t).filter((([t,u])=>!!n.includes(t)||!e.includes(t)&&u!==r[t]))))}))},use:t=>{c.use(t)}}}function h(t,n){return e=>{t((()=>e(!0))),n((()=>e(!1)))}}function O(t,n){return r=>{let u=!1;n((t=>{u=t}));e(t,(()=>!u))(r)}}function g(t){return n=>{let e=null;t((t=>{t!==e&&(n(t),e=t)}))}}function S(t){return n=>{let e=!1;t((t=>{!1===e?e=!0:n(t)}))}}function j(n,e){const u=t(n.event),o=t(e);return{event:t=>{i(n.event,e)((([n,e])=>{const r=e.split(".");let u=n;r.forEach((t=>{u=u[t]})),void 0!==u&&u!==n&&t(u)}))},use:t=>{const e=o.primitive();r(e)&&n.use({...u.primitive(),[e]:t})}}}function y(t,n){return e=>{i(t,n)((([t,n])=>{const r=n.split(".");let u=t;r.forEach((t=>{u=u[t]})),void 0!==u&&u!==t&&e(u)}))}}function T(t,n){return e=>{n((()=>{t(e)}))}}function b(n,e){return u=>{const o=t(n);e((()=>{const t=o.primitive();r(t)&&u(t)}))}}function w(t,n=0){return e=>{let r=null;c(t,(t=>e=>{r&&clearTimeout(r),r=setTimeout((()=>{t(e)}),n)}))(e)}}function J(t){return n=>{let e=!1,r=null;t((t=>{r=t,e||(e=!0,queueMicrotask((()=>{e=!1,null!==r&&(n(r),r=null)})))}))}}function N(t){return n=>{const e={};t((([t,r])=>{e[t]=r,n(e)}))}}function x(t){return n=>{const e=Object.keys(t);i(...Object.values(t))((t=>{const r={};t.forEach(((t,n)=>{r[e[n]]=t})),n(r)}))}}function $(t,n=l("")){return e=>{i(n,...t)((([t,...n])=>{e(n.join(t))}))}}function F(t=l(""),n=l({})){let e=0;const r={$TPL:l("$TPL")},u=[];return{value:e=>{const u=x(r);o(i(t,n,u),(([t,n,e])=>(Object.entries(n).forEach((([n,e])=>{t=t.replaceAll(n,String(e))})),Object.entries(e).forEach((([n,e])=>{t=t.replaceAll(n,String(e))})),t)))(e)},template:n=>{t=l(n)},var:t=>{const n=`$var${e}`;return e+=1,r[n]=s(t,(t=>{u.push(t)})).event,n},destroy(){u.forEach((t=>t()))}}}function R(t,n,e=l("")){return r=>{i(t,n,e)((([t,n,e])=>{r(new RegExp(t,e).test(n))}))}}function k(t,n,e,r=l("")){return u=>{i(n,t,e,r)((([t,n,e,r])=>{u(String(n).replace(new RegExp(t,r),e))}))}}function A(t,n,e=l("")){return r=>{i(t,n,e)((([t,n,e])=>{const u=new RegExp(t,e).exec(n);r(u??[])}))}}function L(t,n,e){return r=>{i(t,n,e)((([t,n,e])=>{t[n]=e,r(t)}))}}const P=()=>l(!1);function q(t,n,e){return r=>{const u=[],c=()=>{u.forEach((t=>t())),u.length=0};return i(n,t)((([t,n])=>{c();const f=i(e(),i(...t.map((t=>s(a(R(l(t.pattern),l(n),t.patternFlags?l(t.patternFlags):void 0),t.template,P),(t=>u.push(t))).event))));o(f,(t=>{const n=t[1].find((t=>!1!==t));return n||t[0]}))(r)})),c}}function B(t,n){return e=>{i(t,n)((([t,n])=>{e(t&&n)}))}}function D(t,n){return e=>{i(t,n)((([t,n])=>{e(t||n)}))}}function M(t){return n=>{t((t=>{n(!t)}))}}function z(t){return n=>{o(t,Boolean)(n)}}function C(t,n){return e=>{t((t=>{try{e(JSON.parse(t))}catch(t){n?.(new Error(`Failed to parse JSON: ${t}`))}}))}}function G(t,n){return e=>{t((t=>{try{e(JSON.stringify(t))}catch{n?.(new Error("Failed to convert to JSON"))}}))}}function H(t){return n=>{o(t,(t=>t[0]))(n)}}export{B as And,z as Bool,f as Branch,a as BranchLazy,$ as Concatenated,p as Constant,v as Deadline,m as Deferred,d as Detached,E as Dirty,H as First,C as FromJson,N as HashTable,h as Loading,O as Lock,g as Memo,M as Not,S as OnlyChanged,D as Or,j as Part,y as Path,T as Polling,x as RecordOf,A as RegexpMatch,R as RegexpMatched,k as RegexpReplaced,q as Router,L as Set,b as Shot,w as Task,F as Template,J as Tick,G as ToJson};
//# sourceMappingURL=silentium-components.min.mjs.map
